#ifndef SRC_SHAPE_FIT_H_
#define SRC_SHAPE_FIT_H_

#include "constants.h"
#include "types.h"

namespace vcsmc {

class Palette;
class PixelStrip;

// Abstract base class to represent a best effort of fitting a specific graphics
// object, in a given COLU class, to the provided line of pixels.
class ShapeFit {
 public:
  ShapeFit(const uint8* initial_fit, uint8 colu_class);

  virtual void DoFit() = 0;

  // Return the total error distance, including the cost of mis-painted pixels,
  // for using this Spec.
  float ComputeTotalError(const PixelStrip* strip);

  // Append our internal specs generated by this Fit to the provided vector
  // of Specs.
  void AppendSpecs(std::vector<Spec>* specs)

  uint32 pixels_matched() { return pixels_matched_; }
  const uint8* final_fit() { return fit_; }

 protected:
  uint8 colu_class_;
  uint8 fit_[kFrameWidthPixels];
  uint32 pixels_matched_;
};

class PlayfieldShapeFit : public ShapeFit {
 public:
  PlayfieldShapeFit(const uint8* initial_fit, uint8 colu_class);
  virtual void DoFit() override;
};

class PlayerShapeFit : public PlayerShapeFit {
 public:
  PlayerShapeFit(const uint8* initial_fit, uint8 colu_class);
  virtual void DoFit() override;
};

}  // namespace vcsmc

#endif  // SRC_SHAPE_FIT_H_

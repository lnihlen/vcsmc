                                                                    *
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111112222222222222222222222222222|
000000000011111111112222222222333333333344444444445555555555666666666677777777778888888888999999999900000000001111111111222222222233333333334444444444555555555566666666667777777777888888888899999999990000000000111111111122222222|
012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567|
|00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31|32|33|34|35|36|37|38|39|40|41|42|43|44|45|46|47|48|49|50|51|52|53|54|55|56|57|58|59|60|61|62|63|64|65|66|67|68|69|70|71|72|73|74|75|
                                                                    <-p0--->        <-p0--->        <-p0--->        <-p0--->        <-p0--->        <-p0--->        <-p0--->        <-p0--->        <-p0--->        <-p0--->        |
                                                                            <-p1--->        <-p1--->        <-p1--->        <-p1--->        <-p1--->        <-p1--->        <-p1--->        <-p1--->        <-p1--->        <-p1--->|

Now displace starts of player triples to clock boundaries:

                                                                    *
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111112222222222222222222222222222|
000000000011111111112222222222333333333344444444445555555555666666666677777777778888888888999999999900000000001111111111222222222233333333334444444444555555555566666666667777777777888888888899999999990000000000111111111122222222|
012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567|
|00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31|32|33|34|35|36|37|38|39|40|41|42|43|44|45|46|47|48|49|50|51|52|53|54|55|56|57|58|59|60|61|62|63|64|65|66|67|68|69|70|71|72|73|74|75|
                                                                    [-p0--->       X<-p0--->       X<-p0---]      [-p0--->X       <-p0--->X       <-p0---]X    [-p0--->X       <-p0--->X       <-p0---]X    [-p0--->X       <-p0--->|
                                                                           [-p1--->X       <-p1--->X       <-p1---]       X[-p1--->       X<-p1--->       X<-p1---]    X[-p1--->       X<-p1--->       X<-p1---]    X[-p1--->       |


19: sta RESP0 (can be earlier)
22: sta RESP1

25: st? grp0 // 3 cycles before p0 hits again at 28

28: // 7 cycles, total of 10 cycles, 2 load stores?
35: sta RESP0
38: sta RESP1

41: // total of 9 cycles

50: sta RESP0
53: sta RESP1

56: // total of 9 cycles

65: sta RESP0
68: sta RESP1

